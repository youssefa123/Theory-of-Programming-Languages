program Caesar
    implicit none

    ! Variables
    character(100) :: str
    integer :: shiftAmount

    ! input from user
    write(*, *) "Enter a string to encrypt:"
    read(*, *) str
    write(*, *) "Enter a shift value:"
    read(*, *) shiftAmount

    !output 
    call encrypt(str, shiftAmount)
    write(*, *) "The encrypted text is: ", str
    call decrypt(str, shiftAmount)
    write(*, *) "The decrypted text is: ", str
    call solve(str, 26)

contains

    subroutine encrypt(str, shiftAmount)
        character(*), intent(inout) :: str
        integer, intent(in) :: shiftAmount
        integer :: i
        character :: c

        i = 1
        do while (i <= len(str)) 
            c = str(i:i)
            if (iachar(c) == 32) then
                str(i:i) = achar(32)
            else
                str(i:i) = achar(modulo(iachar(c) - 65 + shiftAmount, 26) + 65)
            endif
            i = i + 1
        end do

    end subroutine encrypt

    subroutine decrypt(str, shiftAmount)
        character(*), intent(inout) :: str
        integer, intent(in) :: shiftAmount
        integer newshiftAmount
        newshiftAmount = shiftAmount * -1
        call encrypt(str, newshiftAmount)
    end subroutine decrypt

    subroutine solve(str, maxshiftAmount)
        character(*), intent(inout) :: str
        integer, intent(in) :: maxshiftAmount
        character(len=len(str)) :: strCopy
        integer i

        do i = 0, maxshiftAmount
            strCopy = str
            call encrypt(strCopy, i)
            write(*, *) "Caesar ", i, ": ", strCopy
        end do
    end subroutine


end program Caesar



