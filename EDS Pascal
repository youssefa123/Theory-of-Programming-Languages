program ceasercipher;
var
str: String;
shiftamount: Integer;
{Pascal allows you to create a declaration section. Such a section starts with the var keyword followed by the desired declarations}
function encrypt(str: String; shiftamount: Integer): String;
var
i: Integer;
encryptedStr: String;
begin
encryptedStr := '';
{looping through the alphabet or characters in the string} 
for i := 1 to Length(str) do
begin
encryptedStr := encryptedStr + Chr((Ord(str[i]) + shiftamount - Ord('a')) mod 26 + Ord('a'));
end;
encrypt := encryptedStr;
end;
{the opposite of what we did in the encrypt function}
function decrypt(str:String;shiftamount:Integer): String;
var
i: Integer;
decryptStr: String;
begin
decryptStr:= '';
for i:= 1 to Length(str) do
begin
decryptStr:= decryptStr + Chr((Ord(str[i]) - shiftamount + 26) mod 26 + Ord('a'));
end;
decrypt:= decryptStr;
end;

procedure solve(str: String;shiftamount:Integer);
var
i: Integer;
maxShift: Integer;
begin
maxShift := 26;
for i:=0 to maxShift do
begin
writeln('Solve', i, ',', encrypt(str, i));
end;
end;

begin
Write('Enter a string: ');
ReadLn(str);
Write('Enter shift amount: ');
ReadLn(shiftamount);
str := LowerCase(str);
Writeln(' The Encrypted string is : ', encrypt(str, shiftamount));
Writeln(' The Decrypted string is : ', decrypt(encrypt(str, shiftamount), shiftamount));
solve(str,shiftamount);
end.